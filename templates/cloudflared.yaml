apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cloudflared-argocd-admin
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  destination:
    namespace: cloudflared
    server: {{ .Values.spec.destination.server }}
  source:
    repoURL: https://helmcharts.gruntwork.io
    chart: k8s-service
    targetRevision: v0.2.12
    helm:
      # Reference: https://github.com/gruntwork-io/helm-kubernetes-services/blob/master/charts/k8s-service/values.yaml
      values: |
        applicationName: cloudflared-argocd-admin

        replicaCount: 1

        containerResources:
          requests:
            memory: "1024Mi"
            cpu: "1"
          limits:
            memory: "1024Mi"
            cpu: "1"

        service:
          enabled: false
        ingress:
          enabled: false

        containerImage:
          repository: cloudflare/cloudflared
          tag: 2025.2.0
          pullPolicy: Always
        containerCommand:
          - "cloudflared"
          - "--no-autoupdate"
          - "tunnel"
          - "--config"
          - "/etc/cloudflared/config/config.yaml"
          - "run"

        configMaps:
          tunnelcert:
            as: volume
            subPath: cert.pem
            mountPath: /etc/cloudflared/cert.pem
          credentials:
            as: volume
            subPath: credentials.json
            mountPath: /etc/cloudflared/creds/credentials.json
          cloudflared:
            as: volume
            mountPath: /etc/cloudflared/config
            items:
              config.yaml:
                filePath: config.yaml

        customResources:
          enabled: true
          resources:
            cloudflared_configmap: |
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: cloudflared
                namespace: cloudflared
              data:
                config.yaml: |
                  # Name of the tunnel you want to run
                  tunnel: kubelab
                  credentials-file: /etc/cloudflared/creds/credentials.json
                  # Serves the metrics server under /metrics and the readiness server under /ready
                  metrics: 0.0.0.0:2000
                  # Autoupdates applied in a k8s pod will be lost when the pod is removed or restarted, so
                  # autoupdate doesn't make sense in Kubernetes. However, outside of Kubernetes, we strongly
                  # recommend using autoupdate.
                  no-autoupdate: true
                  # The `ingress` block tells cloudflared which local service to route incoming
                  # requests to. For more about ingress rules, see
                  # https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/configuration/ingress
                  #
                  # Remember, these rules route traffic from cloudflared to a local service. To route traffic
                  # from the internet to cloudflared, run `cloudflared tunnel route dns <tunnel> <hostname>`.
                  # E.g. `cloudflared tunnel route dns example-tunnel tunnel.example.com`.
                  ingress:
                    # The first rule proxies traffic to the httpbin sample Service defined in app.yaml
                    - hostname: gitops.kennethfechter.com 
                      service: http://argocd-server.argocd.svc.cluster.local:80
                    - service: http_status:404
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true